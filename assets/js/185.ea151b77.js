(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{750:function(t,a,s){"use strict";s.r(a);var n=s(17),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("关于 "),s("code",[t._v("Java 相关概念介绍")]),t._v(" 可以参考："),s("a",{attrs:{href:"http://tutorials.jenkov.com/java/what-is-java.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("What is Java?"),s("OutboundLink")],1)])]),s("h3",{attrs:{id:"java语言重大事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java语言重大事件"}},[t._v("#")]),t._v(" Java语言重大事件")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("1995 正式发布")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("1996 正式发布了可以下载的 JDK 工具包 JDK 1.0")])])]),t._v(" "),s("li",[s("p",[t._v("1999 发布"),s("strong",[t._v("第二代 Java 平台")]),t._v("，简称 "),s("strong",[t._v("JDK1.2")]),t._v("，细化三个不同的版本")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("版本")]),t._v(" "),s("th",[t._v("英文名")]),t._v(" "),s("th",[t._v("简称")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("标准本")])]),t._v(" "),s("td",[s("strong",[t._v("Standard Edition")])]),t._v(" "),s("td",[s("strong",[t._v("J2SE")])])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("企业版")])]),t._v(" "),s("td",[s("strong",[t._v("Enterprise Edition")])]),t._v(" "),s("td",[s("strong",[t._v("J2EE")])])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("微型版")])]),t._v(" "),s("td",[s("strong",[t._v("Micro Edition")])]),t._v(" "),s("td",[s("strong",[t._v("J2ME")])])])])])]),t._v(" "),s("li",[s("p",[t._v("2004 JDK1.5 版本，添加了很多特性，比如 "),s("code",[t._v("for-each 循环、泛型等")]),t._v("，同时 JDK1.5 改名为 JavaSE5.0")])]),t._v(" "),s("li",[s("p",[t._v("2005 JDK6 版本")])]),t._v(" "),s("li",[s("p",[t._v("2009 Oracle 公司以 "),s("code",[t._v("74亿$")]),t._v(" 收购了 SUN 公司")])])]),t._v(" "),s("h3",{attrs:{id:"java语言的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java语言的特点"}},[t._v("#")]),t._v(" Java语言的特点")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/liukj98/image-hosting@master/Java%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90/image-20210915121629732.5ihjrcc8v9c0.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/liukj98/image-hosting@master/Java%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90/image-20210920191357343.6bq4nadonrw0.png",alt:""}})]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("跨平台性")])]),t._v(" "),s("p",[t._v("所谓的"),s("strong",[t._v("跨平台")]),t._v("，就是一套代码可在不同的操作系统上运行。")]),t._v(" "),s("p",[t._v("现在思考一个问题："),s("strong",[t._v("为什么它能够实现跨平台呢？")])]),t._v(" "),s("p",[t._v("答：因为有一个东西，叫做 JVM(Java Virtual Machine) Java 虚拟机，Java 虚拟机（JVM）是运行 Java 字节码的虚拟机。JVM 有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。")]),t._v(" "),s("p",[t._v("现在再来思考一个问题：以 "),s("code",[t._v(".class")]),t._v(" 结尾的文件（字节码文件）可以直接在计算机上运行吗？")]),t._v(" "),s("p",[t._v("答：不能。因为一个文件要想运行，它需要对应的运行环境，比如："),s("code",[t._v(".doc")]),t._v(" 文件需要 office 办公软件、"),s("code",[t._v(".txt")]),t._v(" 文件需要记事本打开等。所以 "),s("code",[t._v(".class")]),t._v(" 文件要想运行它也得要有一个对应的运行环境，这个运行环境就是 JRE(Java Runtime Enviroment)")]),t._v(" "),s("p",[t._v("在 Java 中， "),s("strong",[t._v("JRE 包含了 JVM")])]),t._v(" "),s("p",[t._v("而作为开发人员，仅仅有 JRE 肯定是不行的，因为 JRE 只是一个运行环境，它并不附带能够开发 Java 源代码的能力，所以我们需要有一个东西（工具）能够帮助我们进行 Java 源代码的开发，这个工具就是 JDK(Java Development Kit)。而现实中我们只需要下载 JDK 就可以了，因为 "),s("strong",[t._v("JDK 中包含了 JRE，JRE 中又包含了 JVM")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("关于 JDK 下载地址 ，"),s("a",{attrs:{href:"https://www.oracle.com/java/technologies/javase-downloads.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("请点击我"),s("OutboundLink")],1)])])]),t._v(" "),s("li",[s("p",[t._v("面向对象")])]),t._v(" "),s("li",[s("p",[t._v("简单性")])]),t._v(" "),s("li",[s("p",[t._v("健壮性（鲁棒性）")]),t._v(" "),s("p",[t._v("异常处理、垃圾回收等")])]),t._v(" "),s("li",[s("p",[t._v("大数据开发相关")])])]),t._v(" "),s("h3",{attrs:{id:"java类的书写规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java类的书写规范"}},[t._v("#")]),t._v(" Java类的书写规范")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Demo.java")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Demo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("当你在类名前加了一个权限修饰符 "),s("code",[t._v("public")]),t._v(" 时，类名要与文件名一致。如上，我写了一个 public 类 Demo，那么该文件名就必须是 Demo.java，否则  JVM 在编译时就会报错")]),t._v(" "),s("p",[t._v("一个 "),s("code",[t._v(".java")]),t._v(" 文件中至多有一个公共类")]),t._v(" "),s("h3",{attrs:{id:"java数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java数据类型"}},[t._v("#")]),t._v(" Java数据类型")]),t._v(" "),s("p",[s("strong",[t._v("基本数据类型（8个）")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型")]),t._v(" "),s("th",[t._v("占用字节数/byte")]),t._v(" "),s("th",[t._v("所属类型")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("byte")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("整型-字节型")])]),t._v(" "),s("tr",[s("td",[t._v("short")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("整型-短整型")])]),t._v(" "),s("tr",[s("td",[t._v("int")]),t._v(" "),s("td",[t._v("4")]),t._v(" "),s("td",[t._v("整型")])]),t._v(" "),s("tr",[s("td",[t._v("long")]),t._v(" "),s("td",[t._v("8")]),t._v(" "),s("td",[t._v("整型-长整型")])]),t._v(" "),s("tr",[s("td",[t._v("float")]),t._v(" "),s("td",[t._v("4")]),t._v(" "),s("td",[t._v("浮点型-单精度")])]),t._v(" "),s("tr",[s("td",[t._v("double")]),t._v(" "),s("td",[t._v("8")]),t._v(" "),s("td",[t._v("浮点型-双精度")])]),t._v(" "),s("tr",[s("td",[t._v("char")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("字符型")])]),t._v(" "),s("tr",[s("td",[t._v("boolean")]),t._v(" "),s("td",[s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mfrac",[s("mn",[t._v("1")]),s("mn",[t._v("8")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\frac{1}{8}")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1.190108em","vertical-align":"-0.345em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mopen nulldelimiter"}),s("span",{staticClass:"mfrac"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.845108em"}},[s("span",{staticStyle:{top:"-2.6550000000000002em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[s("span",{staticClass:"mord mtight"},[t._v("8")])])])]),s("span",{staticStyle:{top:"-3.23em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"frac-line",staticStyle:{"border-bottom-width":"0.04em"}})]),s("span",{staticStyle:{top:"-3.394em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[s("span",{staticClass:"mord mtight"},[t._v("1")])])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.345em"}},[s("span")])])])]),s("span",{staticClass:"mclose nulldelimiter"})])])])])])],1),t._v(" "),s("td",[t._v("布尔类型")])])])]),t._v(" "),s("p",[s("strong",[t._v("引用数据类型")])]),t._v(" "),s("ol",[s("li",[t._v("数组")]),t._v(" "),s("li",[t._v("类\n"),s("ol",[s("li",[t._v("抽象类")]),t._v(" "),s("li",[t._v("接口")])])]),t._v(" "),s("li",[t._v("注解，相当于 JavaScript 中的装饰器")])]),t._v(" "),s("p",[s("strong",[t._v("包装类")])]),t._v(" "),s("h4",{attrs:{id:"整型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整型"}},[t._v("#")]),t._v(" 整型")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("字节型（byte）")])]),t._v(" "),s("li",[s("strong",[t._v("短整型（short）")])]),t._v(" "),s("li",[s("strong",[t._v("整型（int）")])]),t._v(" "),s("li",[s("strong",[t._v("长整型（long）")])])]),t._v(" "),s("p",[t._v("以 "),s("code",[t._v("byte")]),t._v(" 类型为例，占 "),s("code",[t._v("1个")]),t._v(" 字节（8bit），即 "),s("code",[t._v("0 0000000")]),t._v("，共有 "),s("strong",[t._v("256种")]),t._v(" 组合。其中第一位表示符号位，"),s("code",[t._v("0")]),t._v(" 表示正数，"),s("code",[t._v("1")]),t._v(" 表示负数，范围为 "),s("strong",[t._v("-128 ~ 127")]),t._v("。其它整型类似")]),t._v(" "),s("p",[s("code",[t._v("short")]),t._v(" 类型，占 "),s("code",[t._v("2个")]),t._v(" 字节（16bit），即 "),s("code",[t._v("0 000000000000000")]),t._v("，共有 "),s("strong",[t._v("512种")]),t._v(" 组合。其中第一位表示符号位，"),s("code",[t._v("0")]),t._v(" 表示正数，"),s("code",[t._v("1")]),t._v(" 表示负数，范围为 "),s("strong",[t._v("-256 ~ 255")])]),t._v(" "),s("h4",{attrs:{id:"浮点型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点型"}},[t._v("#")]),t._v(" 浮点型")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("单精度浮点型（float）")])]),t._v(" "),s("p",[t._v("书写：值后跟 f 或 F，如 "),s("code",[t._v("float f = 12.3F;")]),t._v("\n因为小数在常量池中默认是以双精度（double）进行存储的，你若直接将一个双精度的值赋值给一个单精度的变量，这在编译时是会报错的。")]),t._v(" "),s("p",[t._v("而当你在小数后跟一个 f 或 F，编译器会作进一步的处理：将双精度的值以单精度进行存储")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("双精度浮点型（double）")])]),t._v(" "),s("p",[t._v("书写："),s("code",[t._v("double d = 12.4;")])])])]),t._v(" "),s("h4",{attrs:{id:"字符型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符型"}},[t._v("#")]),t._v(" 字符型")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("char")])]),t._v(" "),s("p",[t._v("书写：英文单引号，如 "),s("code",[t._v("char c = '9';")])]),t._v(" "),s("p",[t._v("占 2个 字节，使用 Unicode 编码")])])]),t._v(" "),s("h4",{attrs:{id:"布尔型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布尔型"}},[t._v("#")]),t._v(" 布尔型")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("boolean")])]),t._v(" "),s("p",[t._v("书写："),s("code",[t._v("boolean flag = true;")])]),t._v(" "),s("p",[t._v("占 1 bit")])])]),t._v(" "),s("h4",{attrs:{id:"探索赋值语句的底层原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#探索赋值语句的底层原理"}},[t._v("#")]),t._v(" 探索赋值语句的底层原理")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("本质是 Java 程序在内存中是如何分布的（需要深入理解 JVM 啦）")])]),s("p",[t._v("以 "),s("code",[t._v("byte a = 33;")]),t._v(" 为例")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/liukj98/image-hosting@master/Java%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90/image-20210829201041616.1nbb17ekc9uo.png",alt:""}})]),t._v(" "),s("p",[t._v("上述赋值语句执行过程分析：")]),t._v(" "),s("ol",[s("li",[t._v("在存储区的常量池中存储 "),s("code",[t._v("33")]),t._v(" 常量，并且该常量值是以 32bit 进行存储的")]),t._v(" "),s("li",[t._v("在栈内存中开辟一个 byte 类型的内存空间，大小为 8bit，空间的名称为 a")]),t._v(" "),s("li",[t._v("然后从常量池中取出 "),s("code",[t._v("33")]),t._v(" 赋值给 a 变量，但是在赋值的过程中会发生这样一个情况\n"),s("ol",[s("li",[t._v("从常量池中取出的 "),s("code",[t._v("33")]),t._v(" 是 32bit 的，而赋值的变量是 8bit 的，按理来说，如果将 32bit 的值赋给 8bit 的变量是不可以的，但是由于 java 编译器底层做了一些处理，使得其可以完成赋值而不报错")])])])]),t._v(" "),s("h3",{attrs:{id:"常量与变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量与变量"}},[t._v("#")]),t._v(" 常量与变量")]),t._v(" "),s("h4",{attrs:{id:"常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[t._v("#")]),t._v(" 常量")]),t._v(" "),s("p",[t._v("表示在程序运行过程中不能改变的值")]),t._v(" "),s("p",[t._v("基本类型的值都可以认为是常量，如 4、3.4、'a'、true 等")]),t._v(" "),s("p",[t._v("常量存储在常量缓冲区（常量池）中，有且只有一份")]),t._v(" "),s("p",[t._v("常量池中的值默认空间大小有两种：32bit、64bit，32bit 用于存储 int 类型，64bit 用于存储 double 类型")]),t._v(" "),s("h4",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),s("p",[t._v("变量指的是 在程序运行过程中可以改变的")]),t._v(" "),s("p",[t._v("变量是一个内存空间（容器）")]),t._v(" "),s("p",[t._v("变量在创建的时候必须指定数据类型，以及变量空间的名字")]),t._v(" "),s("p",[t._v("变量空间里的内容是可以改变的")]),t._v(" "),s("h3",{attrs:{id:"类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("任何一个数据最终都是以二进制的形式呈现给计算机进行"),s("strong",[t._v("读")]),t._v("和"),s("strong",[t._v("取")]),t._v("\n不同数据类型之间的转换本质是看要转换的俩方在计算机底层上的"),s("strong",[t._v("二进制位数")]),t._v("以及"),s("strong",[t._v("精确程度")]),t._v("\n布尔类型很特殊，不能与其他基本数据类型发生转化")])]),s("h4",{attrs:{id:"同种数据类型之间的转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同种数据类型之间的转换"}},[t._v("#")]),t._v(" 同种数据类型之间的转换")]),t._v(" "),s("p",[t._v("直接进行赋值操作即可")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("88")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.8F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"不同数据类型之间的转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不同数据类型之间的转换"}},[t._v("#")]),t._v(" 不同数据类型之间的转换")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("「整型与整型」 或 「浮点型与浮点型」")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("比较的是"),s("strong",[t._v("内存空间大小")])])]),s("ul",[s("li",[t._v("小数据类型赋值给大数据类型，直接进行")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整型与整型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浮点型与浮点型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.3F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("大数据类型赋值给小数据类型，需要进行指定，该过程也称为"),s("strong",[t._v("强制类型转换")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整型与整型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强制类型转换")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浮点型与浮点型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强制类型转换")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("整型与浮点型")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("比较的是"),s("strong",[t._v("精确程度")])])]),s("p",[t._v("它们俩之间的转换比较的是"),s("strong",[t._v("精确程度")]),t._v("，浮点型的精确程度更高，所以由"),s("strong",[t._v("整型（低精确度）"),s("strong",[t._v("可直接转化成")]),t._v("浮点型（高精确度）")]),t._v("，而由浮点型**（高精确度）"),s("strong",[t._v("转换为整型")]),t._v("（低精确度）**需要进行强制类型转换")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浮点型转换为整型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11.2F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强制类型转换")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整型转换为浮点型，直接转换")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("整型与字符型")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强制类型转换")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'我'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"运算符号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符号"}},[t._v("#")]),t._v(" 运算符号")]),t._v(" "),s("h4",{attrs:{id:"算数运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符"}},[t._v("#")]),t._v(" 算数运算符")]),t._v(" "),s("ol",[s("li",[t._v("加："),s("code",[t._v("+")])]),t._v(" "),s("li",[t._v("减："),s("code",[t._v("-")])]),t._v(" "),s("li",[t._v("乘："),s("code",[t._v("*")])]),t._v(" "),s("li",[t._v("除："),s("code",[t._v("/")])]),t._v(" "),s("li",[t._v("求余："),s("code",[t._v("%")])]),t._v(" "),s("li",[t._v("自增："),s("code",[t._v("++")])]),t._v(" "),s("li",[t._v("自减："),s("code",[t._v("--")])])]),t._v(" "),s("h4",{attrs:{id:"关系运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[t._v("#")]),t._v(" 关系运算符")]),t._v(" "),s("ol",[s("li",[t._v("大于："),s("code",[t._v(">")])]),t._v(" "),s("li",[t._v("大于等于："),s("code",[t._v(">=")])]),t._v(" "),s("li",[t._v("小于："),s("code",[t._v("<")])]),t._v(" "),s("li",[t._v("小于等于："),s("code",[t._v("<=")])]),t._v(" "),s("li",[t._v("等于："),s("code",[t._v("==")])]),t._v(" "),s("li",[t._v("不等于："),s("code",[t._v("!=")])])]),t._v(" "),s("h4",{attrs:{id:"赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("=")])]),t._v(" "),s("li",[s("code",[t._v("+=")])]),t._v(" "),s("li",[s("code",[t._v("-=")])]),t._v(" "),s("li",[s("code",[t._v("*=")])]),t._v(" "),s("li",[s("code",[t._v("/=")])]),t._v(" "),s("li",[s("code",[t._v("%=")])])]),t._v(" "),s("h4",{attrs:{id:"逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),s("ol",[s("li",[t._v("逻辑与："),s("code",[t._v("&")])]),t._v(" "),s("li",[t._v("逻辑或："),s("code",[t._v("|")])]),t._v(" "),s("li",[t._v("逻辑非："),s("code",[t._v("!")]),t._v(" ✅")]),t._v(" "),s("li",[t._v("短路与："),s("code",[t._v("&&")]),t._v(" ✅")]),t._v(" "),s("li",[t._v("短路或："),s("code",[t._v("||")]),t._v(" ✅")])]),t._v(" "),s("h4",{attrs:{id:"位运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[t._v("#")]),t._v(" 位运算符")]),t._v(" "),s("ol",[s("li",[t._v("按位与："),s("code",[t._v("&")])]),t._v(" "),s("li",[t._v("按位或："),s("code",[t._v("|")])]),t._v(" "),s("li",[t._v("按位取反："),s("code",[t._v("~")])]),t._v(" "),s("li",[t._v("按位异或："),s("code",[t._v("^")])]),t._v(" "),s("li",[t._v("左移："),s("code",[t._v("<<")])]),t._v(" "),s("li",[t._v("右移："),s("code",[t._v(">>")])]),t._v(" "),s("li",[t._v("无符号右移："),s("code",[t._v(">>>")])])]),t._v(" "),s("h4",{attrs:{id:"条件运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件运算符"}},[t._v("#")]),t._v(" 条件运算符")]),t._v(" "),s("p",[s("strong",[t._v("也称为三目运算符")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("?:")])])]),t._v(" "),s("h4",{attrs:{id:"instanceof运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instanceof运算符"}},[t._v("#")]),t._v(" instanceof运算符")]),t._v(" "),s("h2",{attrs:{id:"面试难点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试难点"}},[t._v("#")]),t._v(" 面试难点")]),t._v(" "),s("h3",{attrs:{id:"自增与自减运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自增与自减运算符"}},[t._v("#")]),t._v(" 自增与自减运算符")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[s("code",[t._v("++")]),t._v(" 自增运算符属于算数运算符，一般算数运算符的优先级大于赋值运算符优先级\n"),s("strong",[t._v("以上述代码为例")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("++")]),t._v(" 在后，计算机底层会先对 a 变量进行备份，然后将 a 变量的值加1（不是备份的变量哦），最后将备份变量的值符给 a 变量，然后备份空间被销毁")]),t._v(" "),s("li",[t._v("若 "),s("code",[t._v("++")]),t._v(" 在前，计算机底层会先对 a 变量进行加1，然后对 a 变量进行备份，最后将备份变量的值符给 a 变量，然后备份空间被销毁\n所以无论 "),s("code",[t._v("++")]),t._v(" 在前还是在后，最终赋值给 a 变量的都是"),s("strong",[t._v("备份中的值")])])])]),s("p",[t._v("了解上述 "),s("code",[t._v("++")]),t._v(" 运算符原理后再来看一个面试题，最终输出多少？")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),s("h3",{attrs:{id:"原码、反码、补码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原码、反码、补码"}},[t._v("#")]),t._v(" 原码、反码、补码")]),t._v(" "),s("p",[t._v("正数的原码、反码、补码相同")]),t._v(" "),s("p",[t._v("负数的反码相对于原码符号位不动，其余位取反，补码相对于反码加1")]),t._v(" "),s("p",[t._v("以十进制 "),s("code",[t._v("6")]),t._v(" 和 "),s("code",[t._v("-6")]),t._v(" 为例，它们的原码、反码、补码如下")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[t._v("6")]),t._v(" "),s("th",[t._v("-6")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("原码")]),t._v(" "),s("td",[t._v("00000000 00000000 00000000 00000110")]),t._v(" "),s("td",[t._v("10000000 00000000 00000000 00000110")])]),t._v(" "),s("tr",[s("td",[t._v("反码")]),t._v(" "),s("td",[t._v("00000000 00000000 00000000 00000110")]),t._v(" "),s("td",[t._v("11111111 11111111 11111111 11111001")])]),t._v(" "),s("tr",[s("td",[t._v("补码")]),t._v(" "),s("td",[t._v("00000000 00000000 00000000 00000110")]),t._v(" "),s("td",[t._v("11111111 11111111 11111111 11111010")])])])]),t._v(" "),s("p",[s("strong",[t._v("计算机中不管是正数还是负数，都是以补码的形式进行存储的")])]),t._v(" "),s("p",[s("strong",[t._v("我们现在思考一个问题：为什么要用补码的方式表示数字，而不用原码（直接转换的二进制数字）表示呢？")])]),t._v(" "),s("p",[t._v("答：比如做这种运算 "),s("code",[t._v("-2 + 1 = ?")]),t._v(" 时，若直接将十进制数字转换成二进制数字进行运算就会发生错误，如果采用补码的方式进行运算就不会了。你可以自己先转换成二进制试一试，再转换成补码的形式试试就明白了。所以，计算机之所以用补码的形式表示数字，就是为了数字间计算方便")]),t._v(" "),s("p",[t._v("了解上述内容之后，再去学习 "),s("code",[t._v("按位与(&)")]),t._v("、"),s("code",[t._v("按位或(|)")]),t._v("、"),s("code",[t._v("按位异或(^)")]),t._v("、"),s("code",[t._v("左移(<<)")]),t._v("、"),s("code",[t._v("右移(>>)、无符号右移(>>>)")]),t._v(" 等位运算就很容易了")]),t._v(" "),s("h3",{attrs:{id:"_0-1-0-2-0-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-1-0-2-0-3"}},[t._v("#")]),t._v(" 0.1+0.2==0.3?")]),t._v(" "),s("p",[s("strong",[t._v("要想解决这个问题，你需要掌握如下知识：")])]),t._v(" "),s("ol",[s("li",[t._v("如何将十进制数转换成二进制数？")]),t._v(" "),s("li",[t._v("如何用科学计数法表示二进制数？")]),t._v(" "),s("li",[t._v("计算机中是如何表示二进制数的？")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/liukj98/image-hosting@master/Java%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90/image-20210915123806419.5cp3mclm2jk0.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"如何将两个变量的值进行转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何将两个变量的值进行转换"}},[t._v("#")]),t._v(" 如何将两个变量的值进行转换")]),t._v(" "),s("p",[t._v("以 "),s("code",[t._v("int a = 1; int b = 2;")]),t._v(" 为例")]),t._v(" "),s("h4",{attrs:{id:"方式一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式一"}},[t._v("#")]),t._v(" 方式一")]),t._v(" "),s("p",[t._v("分析：利用了一个额外的存储空间，效率不是很高 ❌")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在栈内存中开辟一个额外的内存空间，空间变量名为 c")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"方式二"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式二"}},[t._v("#")]),t._v(" 方式二")]),t._v(" "),s("p",[t._v("分析：不需要额外的空间，效率相对于**「方式一」**要高点，但是可能会发生空间越界，原因是 "),s("code",[t._v("a+b")]),t._v(" 的值可能超过 int 类型的值范围")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b = (a + b) - b = a")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (a + b) - a = b")]),t._v("\n")])])]),s("h4",{attrs:{id:"方式三"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式三"}},[t._v("#")]),t._v(" 方式三")]),t._v(" "),s("p",[t._v("分析：利用 "),s("code",[t._v("异或（^）")]),t._v(" 运算符，效率最高。异或运算规则：相同数进行 "),s("code",[t._v("异或")]),t._v(" 为 0，不同数进行 "),s("code",[t._v("异或")]),t._v(" 为 1。所以，相同的数进行异或一定为0，然后再与 "),s("code",[t._v("另外一个数")]),t._v(" 进行异或，其结果一定等于 "),s("code",[t._v("另外一个数")]),t._v("，也就是 "),s("code",[t._v("a^b^b")]),t._v(" 一定等于 "),s("code",[t._v("a")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于 b = (a^b)^b = a^b^b = a;")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于 a = (a^b)^a = a^b^a = b;")]),t._v("\n")])])]),s("h2",{attrs:{id:"语法结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法结构"}},[t._v("#")]),t._v(" 语法结构")]),t._v(" "),s("h3",{attrs:{id:"顺序结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序结构"}},[t._v("#")]),t._v(" 顺序结构")]),t._v(" "),s("h3",{attrs:{id:"分支结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支结构"}},[t._v("#")]),t._v(" 分支结构")]),t._v(" "),s("h4",{attrs:{id:"单分支if"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单分支if"}},[t._v("#")]),t._v(" 单分支if")]),t._v(" "),s("h4",{attrs:{id:"多分支switch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多分支switch"}},[t._v("#")]),t._v(" 多分支switch")]),t._v(" "),s("h3",{attrs:{id:"循环结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环结构"}},[t._v("#")]),t._v(" 循环结构")]),t._v(" "),s("h4",{attrs:{id:"for循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for循环"}},[t._v("#")]),t._v(" for循环")]),t._v(" "),s("h4",{attrs:{id:"while循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#while循环"}},[t._v("#")]),t._v(" while循环")]),t._v(" "),s("h4",{attrs:{id:"do-while循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#do-while循环"}},[t._v("#")]),t._v(" do-while循环")]),t._v(" "),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("h3",{attrs:{id:"数组的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的定义"}},[t._v("#")]),t._v(" 数组的定义")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("形式：")])]),t._v(" "),s("p",[s("strong",[t._v("数据类型[] 数组名")])]),t._v(" "),s("p",[t._v("也可以是 "),s("strong",[t._v("「数据类型 []数组名」")]),t._v(" 或 "),s("strong",[t._v("「数据类型 数组名[]」")]),t._v(" 的形式")]),t._v(" "),s("p",[t._v("但是一般来说，我们采用正规的写法进行数组的定义，即 "),s("code",[t._v("数据类型[] 数组名")])])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以上三种方式结果都是一样的，但一般我们都是采用的第一种方式进行数组的定义")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("举例：")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr1\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr2 \n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr3\n")])])]),s("h3",{attrs:{id:"数组的初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的初始化"}},[t._v("#")]),t._v(" 数组的初始化")]),t._v(" "),s("h4",{attrs:{id:"静态初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态初始化"}},[t._v("#")]),t._v(" 静态初始化")]),t._v(" "),s("p",[t._v("有长度，有元素")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式一")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式二")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当你通过 new 的方式创建一个对象时，在堆内存中会申请开辟了一个块新的空间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"动态初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态初始化"}},[t._v("#")]),t._v(" 动态初始化")]),t._v(" "),s("p",[t._v("有长度，没有元素，但是会有默认值，不同的元素类型其默认值是不一样的")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个长度为5的整型数组，默认值为 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认值为 0.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认值为 null")]),t._v("\n")])])]),s("h2",{attrs:{id:"类的加载顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类的加载顺序"}},[t._v("#")]),t._v(" 类的加载顺序")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("先加载父类")])]),t._v(" "),s("ol",[s("li",[t._v("父类产生自己的静态空间，里面先加载"),s("strong",[t._v("静态属性")]),t._v("、再加载"),s("strong",[t._v("静态方法")]),t._v("、最后加载"),s("strong",[t._v("静态代码块")])]),t._v(" "),s("li",[t._v("然后"),s("strong",[t._v("执行")]),t._v("静态代码块中的代码")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("再加载子类")])]),t._v(" "),s("ol",[s("li",[t._v("子类产生自己的静态空间，里面先加载"),s("strong",[t._v("静态属性")]),t._v("、再加载"),s("strong",[t._v("静态方法")]),t._v("、最后加载"),s("strong",[t._v("静态代码块")])]),t._v(" "),s("li",[t._v("然后"),s("strong",[t._v("执行")]),t._v("静态代码块中的代码")])])]),t._v(" "),s("li",[s("p",[t._v("在堆中开辟的空间")])]),t._v(" "),s("li",[s("p",[t._v("然后加载父类的"),s("strong",[t._v("非静态属性")]),t._v("、"),s("strong",[t._v("非静态方法")]),t._v("、"),s("strong",[t._v("非静态代码块")]),t._v("、"),s("strong",[t._v("构造方法")])]),t._v(" "),s("ol",[s("li",[t._v("先执行非静态代码块中的代码")]),t._v(" "),s("li",[t._v("再执行构造方法")])])]),t._v(" "),s("li",[s("p",[t._v("接着加载子类的"),s("strong",[t._v("非静态属性")]),t._v("、"),s("strong",[t._v("非静态方法")]),t._v("、"),s("strong",[t._v("非静态代码块")]),t._v("、"),s("strong",[t._v("构造方法")])]),t._v(" "),s("ol",[s("li",[t._v("先执行非静态代码块中的代码")]),t._v(" "),s("li",[t._v("再执行构造方法")])])]),t._v(" "),s("li",[s("p",[t._v("对象创建成功后，将对象的地址（引用）赋给变量")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Animal"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态属性")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非静态属性")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是 Animal 构造方法"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非静态代码块")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("animalNormalTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是 Animal 非静态代码块"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态代码块")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("animalTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是 Animal 静态代码块"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态方法")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("animalTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是 "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 类的静态方法 animalTest"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非静态方法")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("animalNormalTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我今年 "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 岁"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是 Animal 类的非静态方法 animalNormalTest"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cat"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态属性")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非静态属性")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是 Cat 构造方法"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非静态代码块")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catNormalTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是 Cat 非静态代码块"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态代码块")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是 Cat 静态代码块"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态方法")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是 "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 类的静态方法 catTest"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非静态方法")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catNormalTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我今年 "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 岁"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是 Cat 类的非静态方法 catNormalTest"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在主程序中执行 `Cat cat = new Cat()` 代码输出如下结果：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我是 Animal 类的静态方法 animalTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我是 Animal 静态代码块")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我是 Cat 类的静态方法 catTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我是 Cat 静态代码块")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我今年 12 岁")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我是 Animal 类的非静态方法 animalNormalTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我是 Animal 非静态代码块")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我是 Animal 构造方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我今年 99 岁")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我是 Cat 类的非静态方法 catNormalTest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我是 Cat 非静态代码块")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我是 Cat 构造方法")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);