(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{689:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("关于链表相关的算法，其核心就是一个 "),a("strong",[t._v("遍历")]),t._v("，遍历链表的所有节点。在遍历的过程中根据题意适当做一些特定的处理。而在遍历链表所有节点时也可以使用递归，无论是前序遍历还是后序遍历。除此之外，你还需要思考以下几个问题："),a("strong",[t._v("链表的边界处理")]),t._v("、"),a("strong",[t._v("针对链表节点的删除和插入处理")])]),t._v(" "),a("h2",{attrs:{id:"链表的边界处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链表的边界处理"}},[t._v("#")]),t._v(" 链表的边界处理")]),t._v(" "),a("ol",[a("li",[t._v("如果链表为空时，代码是否能正常工作？")]),t._v(" "),a("li",[t._v("如果链表只包含一个结点时，代码是否能正常工作？")]),t._v(" "),a("li",[t._v("如果链表只包含两个结点时，代码是否能正常工作？")]),t._v(" "),a("li",[t._v("代码逻辑在处理头结点和尾结点的时候，是否能正常工作？")])]),t._v(" "),a("h2",{attrs:{id:"针对链表节点的删除和插入处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#针对链表节点的删除和插入处理"}},[t._v("#")]),t._v(" 针对链表节点的删除和插入处理")]),t._v(" "),a("ol",[a("li",[t._v("删除\n"),a("ol",[a("li",[t._v("删除的是头节点")]),t._v(" "),a("li",[t._v("删除的是非头节")])])]),t._v(" "),a("li",[t._v("插入\n"),a("ol",[a("li",[t._v("插入的位置为头节点")]),t._v(" "),a("li",[t._v("插入的位置为非头节点")])])])]),t._v(" "),a("p",[t._v("除此之外，链表相关的思想使用最多的就是"),a("strong",[t._v("双指针")]),t._v("（快慢指针、伪头指针等）思想")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("当在题目中碰到 "),a("code",[t._v("删除")]),t._v(" 节点操作时一般会使用 "),a("code",[t._v("伪头指针")]),t._v(" 进行代码逻辑的统一，因为对于头节点的删除操作与非头节点的删除操作是不一样的")]),t._v(" "),a("p",[t._v("我们都知道若想删除某个节点，我们需要知道该节点的前一个节点，而对于头节点而言根本就没有前一个节点，于是为了让对头节点的操作和普通节点一样，我们可以构造一个虚拟头节点，让它的 "),a("code",[t._v("next")]),t._v(" 指针指向头节点，这样就使得对头节点的删除操作和其他节点一样了")]),t._v(" "),a("p",[t._v("也就是说通过 "),a("code",[t._v("伪头指针")]),t._v(" 可以将两种操作（头节点与非头节点操作）的代码逻辑进行统一，其中 "),a("code",[t._v("伪头指针")]),t._v(" 也称为 "),a("code",[t._v("哨兵节点")]),t._v(" 或"),a("code",[t._v("虚拟头节点")])])]),a("h2",{attrs:{id:"链表与其它数据结构的联系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链表与其它数据结构的联系"}},[t._v("#")]),t._v(" 链表与其它数据结构的联系")]),t._v(" "),a("p",[t._v("链表相关相关题目还经常利用"),a("strong",[t._v("栈")]),t._v("（后进先出）这种数据结构进行解答")]),t._v(" "),a("h2",{attrs:{id:"链表的遍历框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链表的遍历框架"}},[t._v("#")]),t._v(" 链表的遍历框架")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取链表的头节点指针")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一般情况 condition 都是 p !== null")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle 代码")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新头节点指针")]),t._v("\n    p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle 代码")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历完链表之后的 handle 代码")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);