(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{575:function(t,a,r){"use strict";r.r(a);var e=r(17),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"数据结构与算法思维导图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与算法思维导图"}},[t._v("#")]),t._v(" 数据结构与算法思维导图")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/liukj98/image-hosting@master/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95.730zvygg6cs0.webp",alt:""}})]),t._v(" "),r("h2",{attrs:{id:"排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./sort/bubbleSort"}},[t._v("冒泡排序")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./sort/selectSort"}},[t._v("选择排序")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./sort/insertSort"}},[t._v("插入排序")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./sort/mergeSort"}},[t._v("归并排序")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./sort/quickSort"}},[t._v("快速排序")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./sort/heapSort"}},[t._v("堆排序")])])]),t._v(" "),r("h2",{attrs:{id:"数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./array/binarySearch"}},[t._v("二分查找")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./array/searchInsert"}},[t._v("搜索插入位置")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./array/removeElement"}},[t._v("移除元素")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./array/moveZeroes"}},[t._v("移动零")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./array/removeDuplicates"}},[t._v("删除有序数组中的重复项")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./array/sortedSquares"}},[t._v("有序数组的平方")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./array/minSubArrayLen"}},[t._v("长度最小的子数组")])])]),t._v(" "),r("h2",{attrs:{id:"链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./linkList/introduction"}},[t._v("链表介绍")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./linkList/middleNode"}},[t._v("链表的中间节点")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./linkList/getKthFromEnd"}},[t._v("链表的倒数第K个节点")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./linkList/removeNthFromEnd"}},[t._v("删除链表的倒数第N个节点")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./linkList/removeElements"}},[t._v("移除链表元素")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./linkList/hasCycle"}},[t._v("环形链表")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./linkList/detectCycle"}},[t._v("环形链表II")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./linkList/getIntersectionNode"}},[t._v("相交链表")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./linkList/reverseList"}},[t._v("反转链表")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./linkList/oddEvenList"}},[t._v("奇偶链表")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./linkList/isPalindrome"}},[t._v("回文链表")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./linkList/mergeTwoLists"}},[t._v("合并两个有序链表")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./linkList/mergeKLists"}},[t._v("合并K个升序链表")])])]),t._v(" "),r("h2",{attrs:{id:"哈希表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#哈希表"}},[t._v("#")]),t._v(" 哈希表")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./hash/isAnagram"}},[t._v("有效的字母异位词")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./hash/groupAnagrams"}},[t._v("字母异位词分组")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./hash/findAnagrams"}},[t._v("找到字符串中所有字母异位词")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./hash/canConstruct"}},[t._v("赎金信")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./hash/intersection"}},[t._v("两个数组的交集")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./hash/isHappy"}},[t._v("快乐数")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./hash/twoSum"}},[t._v("两数之和")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./hash/fourSumCount"}},[t._v("四数相加 II")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./hash/threeSum"}},[t._v("三数之和")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./hash/fourSum"}},[t._v("四数之和")])])]),t._v(" "),r("h2",{attrs:{id:"栈与队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈与队列"}},[t._v("#")]),t._v(" 栈与队列")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./stack/introduction"}},[t._v("栈与队列的介绍")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./stack/applycation"}},[t._v("栈的应用")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./stack/MyQueue"}},[t._v("用栈实现队列")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./stack/MyStack"}},[t._v("用队列实现栈")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./stack/isValid"}},[t._v("有效的括号")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./stack/removeDuplicates"}},[t._v("删除字符串中的所有相邻重复项")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./stack/evalRPN"}},[t._v("逆波兰表达式求值")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./stack/maxSlidingWindow"}},[t._v("滑动窗口最大值")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./stack/topKFrequent"}},[t._v("前K个高频元素")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./stack/addTwoNumbers"}},[t._v("两数相加 II")])])]),t._v(" "),r("h2",{attrs:{id:"二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" 二叉树")]),t._v(" "),r("ul",[r("li",[t._v("👉 "),r("a",{attrs:{href:"./binaryTree/introduction"}},[t._v("二叉树介绍")])])]),t._v(" "),r("h3",{attrs:{id:"深度优先遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#深度优先遍历"}},[t._v("#")]),t._v(" 深度优先遍历")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./binaryTree/dfs/preorderTraversal"}},[t._v("二叉树的前序遍历")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/dfs/inorderTraversal"}},[t._v("二叉树的中序遍历")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/dfs/postorderTraversal"}},[t._v("二叉树的后序遍历")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/dfs/preorder"}},[t._v("N叉树的前序遍历")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/dfs/postorder"}},[t._v("N叉树的后序遍历")])])]),t._v(" "),r("h3",{attrs:{id:"广度优先遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#广度优先遍历"}},[t._v("#")]),t._v(" 广度优先遍历")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./binaryTree/bfs/levelOrder"}},[t._v("二叉树的层序遍历")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bfs/levelOrderBottom"}},[t._v("二叉树的层序遍历 II")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bfs/rightSideView"}},[t._v("二叉树的右视图")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bfs/averageOfLevels"}},[t._v("二叉树的层平均值")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bfs/nLevelOrder"}},[t._v("N叉树的层序遍历")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bfs/largestValues"}},[t._v("在每个树行中找最大值")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bfs/connect"}},[t._v("填充每个节点的下一个右侧节点指针")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bfs/connect2"}},[t._v("填充每个节点的下一个右侧节点指针 II")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bfs/maxDepth"}},[t._v("二叉树的最大深度")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bfs/minDepth"}},[t._v("二叉树的最小深度")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bfs/maxDepthN"}},[t._v("N 叉树的最大深度")])])]),t._v(" "),r("h3",{attrs:{id:"二叉搜索树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉搜索树"}},[t._v("#")]),t._v(" 二叉搜索树")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./binaryTree/bst/searchBST"}},[t._v("二叉搜索树中的搜索")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bst/rangeSumBST"}},[t._v("二叉搜索树的范围和")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bst/isValidBST"}},[t._v("验证二叉搜索树")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bst/kthSmallest"}},[t._v("二叉搜索树中第K小的元素")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bst/sortedArrayToBST"}},[t._v("将有序数组转换为二叉搜索树")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bst/insertIntoBST"}},[t._v("二叉搜索树中的插入操作")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bst/getMinimumDifference"}},[t._v("二叉搜索树的最小绝对差")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bst/findMode"}},[t._v("二叉搜索树中的众数")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bst/convertBST"}},[t._v("把二叉搜索树转换为累加树")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/bst/lowestCommonAncestor"}},[t._v("二叉搜索树的最近公共祖先")])])]),t._v(" "),r("h3",{attrs:{id:"其他"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./binaryTree/other/invertTree"}},[t._v("翻转二叉树")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/isBalanced"}},[t._v("平衡二叉树")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/isSameTree"}},[t._v("相同的树")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/isSymmetric"}},[t._v("对称二叉树")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/isSubtree"}},[t._v("另一棵树的子树")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/binaryTreePaths"}},[t._v("二叉树的所有路径")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/hasPathSum"}},[t._v("路径总和")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/pathSum"}},[t._v("路径总和 II")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/countNodes"}},[t._v("完全二叉树的节点个数")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/sumOfLeftLeaves"}},[t._v("左叶子之和")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/findBottomLeftValue"}},[t._v("找树左下角的值")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/mergeTrees"}},[t._v("合并二叉树")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/flatten"}},[t._v("二叉树展开为链表")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/lowestCommonAncestor"}},[t._v("二叉树的最近公共祖先")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./binaryTree/other/findDuplicateSubtrees"}},[t._v("寻找重复的子树")])])]),t._v(" "),r("h2",{attrs:{id:"回溯"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回溯"}},[t._v("#")]),t._v(" 回溯")]),t._v(" "),r("ul",[r("li",[t._v("👉 "),r("a",{attrs:{href:"./backtrack/introduction"}},[t._v("回溯算法介绍")])])]),t._v(" "),r("h3",{attrs:{id:"组合问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#组合问题"}},[t._v("#")]),t._v(" 组合问题")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./backtrack/combinationRelation/combine"}},[t._v("组合")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./backtrack/combinationRelation/combinationSum3"}},[t._v("组合总和 III")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./backtrack/combinationRelation/letterCombinations"}},[t._v("电话号码的字母组合")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./backtrack/combinationRelation/combinationSum"}},[t._v("组合总和")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./backtrack/combinationRelation/combinationSum2"}},[t._v("组合总和 II")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./backtrack/combinationRelation/partition"}},[t._v("分割回文串")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./backtrack/combinationRelation/restoreIpAddresses"}},[t._v("复原 IP 地址")])])]),t._v(" "),r("h3",{attrs:{id:"子集问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#子集问题"}},[t._v("#")]),t._v(" 子集问题")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./backtrack/subsetRelation/subsets"}},[t._v("子集")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./backtrack/subsetRelation/subsetsWithDup"}},[t._v("子集 II")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./backtrack/subsetRelation/findSubsequences"}},[t._v("递增子序列")])])]),t._v(" "),r("h3",{attrs:{id:"排列问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#排列问题"}},[t._v("#")]),t._v(" 排列问题")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./backtrack/permuteRelation/permute"}},[t._v("全排列")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./backtrack/permuteRelation/permuteUnique"}},[t._v("全排列 II")])])]),t._v(" "),r("h3",{attrs:{id:"棋盘问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#棋盘问题"}},[t._v("#")]),t._v(" 棋盘问题")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./backtrack/chessRelation/solveNQueens"}},[t._v("N 皇后")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./backtrack/chessRelation/solveSudoku"}},[t._v("解数独")])])]),t._v(" "),r("h2",{attrs:{id:"贪心"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#贪心"}},[t._v("#")]),t._v(" 贪心")]),t._v(" "),r("ul",[r("li",[t._v("👉 "),r("a",{attrs:{href:"./greed/introduction"}},[t._v("贪心算法介绍")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./greed/findContentChildren"}},[t._v("分发饼干")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./greed/wiggleMaxLength"}},[t._v("摆动序列")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./greed/maxProfit"}},[t._v("买卖股票的最佳时机 II")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./greed/canJump"}},[t._v("跳跃游戏")])])]),t._v(" "),r("h2",{attrs:{id:"动态规划"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[t._v("#")]),t._v(" 动态规划")]),t._v(" "),r("ul",[r("li",[t._v("👉 "),r("a",{attrs:{href:"./dp/introduction"}},[t._v("动态规划介绍")])])]),t._v(" "),r("h3",{attrs:{id:"基础问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基础问题"}},[t._v("#")]),t._v(" 基础问题")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./dp/base/fib"}},[t._v("斐波那契数列")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/base/climbStairs"}},[t._v("爬楼梯")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/base/minCostClimbingStairs"}},[t._v("使用最小花费爬爬楼梯")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/base/uniquePaths"}},[t._v("不同路径")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/base/uniquePathsWithObstacles"}},[t._v("不同路径II")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/base/integerBreak"}},[t._v("整数拆分")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/base/numTrees"}},[t._v("不同的二叉搜索树")])])]),t._v(" "),r("h3",{attrs:{id:"打家劫舍问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#打家劫舍问题"}},[t._v("#")]),t._v(" 打家劫舍问题")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./dp/robRelation/rob"}},[t._v("打家劫舍")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/robRelation/rob2"}},[t._v("打家劫舍 II")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/robRelation/rob3"}},[t._v("打家劫舍 III")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/robRelation/deleteAndEarn"}},[t._v("删除并获得点数")])])]),t._v(" "),r("h3",{attrs:{id:"买卖股票问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#买卖股票问题"}},[t._v("#")]),t._v(" 买卖股票问题")]),t._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/dp/stocks/maxProfit.html"}},[t._v("买卖股票的最佳时机")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/dp/stocks/maxProfit2.html"}},[t._v("买卖股票的最佳时机 II")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/dp/stocks/maxProfit3.html"}},[t._v("买卖股票的最佳时机 III")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/dp/stocks/maxProfit4.html"}},[t._v("买卖股票的最佳时机 IV")])],1)]),t._v(" "),r("h3",{attrs:{id:"子序列问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#子序列问题"}},[t._v("#")]),t._v(" 子序列问题")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./dp/subSequenceRelation/lengthOfLIS"}},[t._v("最长递增子序列的长度")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/subSequenceRelation/findLengthOfLCIS"}},[t._v("最长连续递增序列")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/subSequenceRelation/maxSubArray"}},[t._v("最大子数组和")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/subSequenceRelation/findLength"}},[t._v("最长重复子数组")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/subSequenceRelation/longestCommonSubsequence"}},[t._v("最长公共子序列")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./dp/subSequenceRelation/longestPalindromeSubseq"}},[t._v("最长回文子序列")])])]),t._v(" "),r("h3",{attrs:{id:"背包问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#背包问题"}},[t._v("#")]),t._v(" 背包问题")]),t._v(" "),r("h4",{attrs:{id:"_01背包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_01背包"}},[t._v("#")]),t._v(" 01背包")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./dp/bag/01bag/canPartition"}},[t._v("分割等和子集")])]),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/dp/bag/01bag/lastStoneWeightII.html"}},[t._v("最后一块石头的重量 II")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/dp/bag/01bag/findTargetSumWays.html"}},[t._v("目标和")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/dp/bag/01bag/findMaxForm.html"}},[t._v("一和零")])],1)]),t._v(" "),r("h4",{attrs:{id:"完全背包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#完全背包"}},[t._v("#")]),t._v(" 完全背包")]),t._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/dp/bag/fullBag/change.html"}},[t._v("零钱兑换 II")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/dp/bag/fullBag/combinationSum4.html"}},[t._v("组合总和 Ⅳ")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/dp/bag/fullBag/coinChange.html"}},[t._v("零钱兑换")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/dp/bag/fullBag/numSquares.html"}},[t._v("完全平方数")])],1)]),t._v(" "),r("h2",{attrs:{id:"数学"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数学"}},[t._v("#")]),t._v(" 数学")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./math/countPrimes"}},[t._v("计数质数")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./math/convertToBase7"}},[t._v("七进制数")])])]),t._v(" "),r("h3",{attrs:{id:"位运算"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#位运算"}},[t._v("#")]),t._v(" 位运算")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"./math/bitOperation/introduction"}},[t._v("位运算介绍")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./math/bitOperation/isPowerOfTwo"}},[t._v("2 的幂")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./math/bitOperation/isPowerOfFour"}},[t._v("4 的幂")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./math/bitOperation/swapNumbers"}},[t._v("交换数字")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./math/bitOperation/singleNumber"}},[t._v("只出现一次的数字")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./math/bitOperation/hammingWeight"}},[t._v("位 1 的个数")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./math/bitOperation/hammingDistance"}},[t._v("汉明距离")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./math/bitOperation/hasAlternatingBits"}},[t._v("交替位二进制数")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./math/bitOperation/subsetXORSum"}},[t._v("找出所有自己的异或总和再求和")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./math/bitOperation/getSum"}},[t._v("两整数之和")])]),t._v(" "),r("li",[r("a",{attrs:{href:"./math/bitOperation/insertBits"}},[t._v("插入")])])]),t._v(" "),r("h2",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://programmercarl.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码随想录"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://time.geekbang.org/column/article/80850?cid=100017301",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据结构与算法之美"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://leetcode.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=s.exports}}]);